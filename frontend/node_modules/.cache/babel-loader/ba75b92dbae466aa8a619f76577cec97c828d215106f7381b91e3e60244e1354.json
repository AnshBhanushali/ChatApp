{"ast":null,"code":"var _jsxFileName = \"/Users/anshbhanushali/Desktop/chatApp/frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport LanguageSelector from '../components/LanguageSelector';\nimport ChatMessage from '../components/ChatMessage';\nimport { Box, TextField, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction ChatPage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [language, setLanguage] = useState('en');\n  useEffect(() => {\n    socket.on('receiveMessage', msg => {\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => socket.off('receiveMessage');\n  }, []);\n  const handleLanguageChange = selectedLanguage => {\n    setLanguage(selectedLanguage);\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/chat/message`, {\n        message,\n        language\n      });\n      socket.emit('sendMessage', response.data.ai_response);\n      setMessages(prev => [...prev, {\n        message,\n        ai_response: response.data.ai_response\n      }]);\n      setMessage('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {\n      onLanguageChange: handleLanguageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        mt: 2\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg.message,\n        aiResponse: msg.ai_response\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: sendMessage,\n      sx: {\n        display: 'flex',\n        width: '100%',\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Type a message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        sx: {\n          ml: 2\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatPage, \"+OokAtA4ednGpeViA4/kxQdZzsw=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","io","axios","LanguageSelector","ChatMessage","Box","TextField","Button","Typography","jsxDEV","_jsxDEV","socket","ChatPage","_s","messages","setMessages","message","setMessage","language","setLanguage","on","msg","prev","off","handleLanguageChange","selectedLanguage","sendMessage","e","preventDefault","response","post","process","env","REACT_APP_API_URL","emit","data","ai_response","err","console","error","sx","display","flexDirection","alignItems","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onLanguageChange","width","mt","map","index","aiResponse","onSubmit","fullWidth","label","value","onChange","target","type","ml","_c","$RefreshReg$"],"sources":["/Users/anshbhanushali/Desktop/chatApp/frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport LanguageSelector from '../components/LanguageSelector';\nimport ChatMessage from '../components/ChatMessage';\nimport { Box, TextField, Button, Typography } from '@mui/material';\n\nconst socket = io('http://localhost:5000');\n\nfunction ChatPage() {\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [language, setLanguage] = useState('en');\n\n    useEffect(() => {\n        socket.on('receiveMessage', (msg) => {\n            setMessages((prev) => [...prev, msg]);\n        });\n\n        return () => socket.off('receiveMessage');\n    }, []);\n\n    const handleLanguageChange = (selectedLanguage) => {\n        setLanguage(selectedLanguage);\n    };\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_API_URL}/chat/message`,\n                { message, language }\n            );\n            socket.emit('sendMessage', response.data.ai_response);\n            setMessages((prev) => [...prev, { message, ai_response: response.data.ai_response }]);\n            setMessage('');\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    return (\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                Chat\n            </Typography>\n            <LanguageSelector onLanguageChange={handleLanguageChange} />\n            <Box sx={{ width: '100%', mt: 2 }}>\n                {messages.map((msg, index) => (\n                    <ChatMessage key={index} message={msg.message} aiResponse={msg.ai_response} />\n                ))}\n            </Box>\n            <Box component=\"form\" onSubmit={sendMessage} sx={{ display: 'flex', width: '100%', mt: 2 }}>\n                <TextField\n                    fullWidth\n                    label=\"Type a message\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                />\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{ ml: 2 }}\n                >\n                    Send\n                </Button>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}